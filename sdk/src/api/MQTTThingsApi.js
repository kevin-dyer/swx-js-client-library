/**
 * SmartWorks SDK
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthZError from '../model/AuthZError';
import BaseError from '../model/BaseError';
import RelationError from '../model/RelationError';
import ShowCredentialsThingResponse from '../model/ShowCredentialsThingResponse';

/**
* MQTTThings service.
* @module api/MQTTThingsApi
* @version 1.0.0
*/
export default class MQTTThingsApi {

    /**
    * Constructs a new MQTTThingsApi. 
    * @alias module:api/MQTTThingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * List Thing MQTT credentials
     * Shiw an specific MQTT credentials for a specific thing
     * @param {String} space 
     * @param {String} thingId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ShowCredentialsThingResponse} and HTTP response
     */
    listThingMQTTcredentialsWithHttpInfo(space, thingId) {
      let postBody = null;
      // verify the required parameter 'space' is set
      if (space === undefined || space === null) {
        throw new Error("Missing the required parameter 'space' when calling listThingMQTTcredentials");
      }
      // verify the required parameter 'thingId' is set
      if (thingId === undefined || thingId === null) {
        throw new Error("Missing the required parameter 'thingId' when calling listThingMQTTcredentials");
      }

      let pathParams = {
        'space': space,
        'thing-id': thingId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearerAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ShowCredentialsThingResponse;
      return this.apiClient.callApi(
        '/spaces/{space}/mqtt/things/{thing-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List Thing MQTT credentials
     * Shiw an specific MQTT credentials for a specific thing
     * @param {String} space 
     * @param {String} thingId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ShowCredentialsThingResponse}
     */
    listThingMQTTcredentials(space, thingId) {
      return this.listThingMQTTcredentialsWithHttpInfo(space, thingId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
