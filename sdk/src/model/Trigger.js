/**
 * SmartWorks SDK
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TriggerMqttConfig from './TriggerMqttConfig';
import TriggerStatusEnum from './TriggerStatusEnum';
import TriggerTypeEnum from './TriggerTypeEnum';

/**
 * The Trigger model module.
 * @module model/Trigger
 * @version 1.0.0
 */
class Trigger {
    /**
     * Constructs a new <code>Trigger</code>.
     * @alias module:model/Trigger
     */
    constructor() { 
        
        Trigger.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Trigger</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Trigger} obj Optional instance to populate.
     * @return {module:model/Trigger} The populated <code>Trigger</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Trigger();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = TriggerTypeEnum.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = TriggerMqttConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = TriggerStatusEnum.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('error_message')) {
                obj['error_message'] = ApiClient.convertToType(data['error_message'], 'String');
            }
            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Trigger.prototype['id'] = undefined;

/**
 * @member {String} description
 */
Trigger.prototype['description'] = undefined;

/**
 * @member {module:model/TriggerTypeEnum} type
 */
Trigger.prototype['type'] = undefined;

/**
 * @member {module:model/TriggerMqttConfig} config
 */
Trigger.prototype['config'] = undefined;

/**
 * @member {module:model/TriggerStatusEnum} status
 */
Trigger.prototype['status'] = undefined;

/**
 * If the Trigger failed (status = `Failed`), this attribute will contain the error message.
 * @member {String} error_message
 */
Trigger.prototype['error_message'] = undefined;

/**
 * Optional callback URL to send the function response to.
 * @member {String} callback_url
 */
Trigger.prototype['callback_url'] = undefined;






export default Trigger;

